; NOTE :
; --parallel option is available only since Flask 1.9

[tox]
minversion = 3.7
envlist =
    tests
    coverage
    linting
skipsdist = true

[testenv]
changedir=src/
setenv =
    PYTHONPATH = {toxinidir}/tests:{toxinidir}
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
whitelist_externals = /bin/sh
setenv =
    FLASK_SETTINGS_MODULE={{cookiecutter.flask_project_name}}.config
    COVERAGE_FILE={envdir}/coverage_report
    DB_USER={env:POSTGRES_USER:user}
    DB_PASSWORD={env:POSTGRES_PASSWORD:password}
    DB_NAME={env:POSTGRES_DB:db}
    DB_HOST={env:POSTGRES_HOST:db}
    MYSQL_USER={env:POSTGRES_USER:user}
    MYSQL_PASSWORD={env:POSTGRES_PASSWORD:password}
    MYSQL_DATABASE={env:POSTGRES_DB:db}
    MYSQL_HOST={env:POSTGRES_HOST:db}
    POSTGRES_USER={env:POSTGRES_USER:user}
    POSTGRES_PASSWORD={env:POSTGRES_PASSWORD:password}
    POSTGRES_DB={env:POSTGRES_DB:db}
    POSTGRES_HOST={env:POSTGRES_HOST:db}
    PROJECT_DIR={env:PROJECT_DIR:{{cookiecutter.flask_project_name}}/}
    PROJECT_PACKAGE={env:PROJECT_PACKAGE:{{cookiecutter.flask_project_name}}}

[testenv:tests]
commands =
    pipenv shell
    coverage erase
    py.test --basetemp={envtmpdir} tests

[testenv:coverage]
commands =
    coverage erase
    sh -c 'coverage run --source=.  py.test --basetemp={envtmpdir} ../tests'
    coverage report

[testenv:linting]
commands =
    pylama -o ../tox.ini
    isort -c -rc --quiet

[pylama]
skip = */migrations/*,*/settings/*
ignore = W0401

[pep8]
max_line_length = 120
