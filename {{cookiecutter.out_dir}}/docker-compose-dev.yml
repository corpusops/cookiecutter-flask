version: '3.7'
{% set nginxc    = (not cookiecutter.nginx_in_dev) and '#' or '' %}
{% set nginxsslc = (not cookiecutter.ssl_in_dev) and '#' or '' %}
x-images:
  bypass: &bypass
    command: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    entrypoint: 'sh -c "while true;do echo notstarted;sleep 65000;done"'
    restart: "no"
  flask: &flask
    environment: &flask_env
       FLASK_SETTINGS_MODULE: "${FLASK_SETTINGS_MODULE:-{{cookiecutter.flask_settings}}.dev}"
       PIPENV_INSTALL_ARGS: "--dev --ignore-pipfile"
       NO_PIPENV_INSTALL: ""
    volumes: &flask_volumes
      {%-if cookiecutter.use_submodule_for_deploy_code %}
      - ./{{cookiecutter.deploy_project_dir}}/sys/sudoer:/etc/sudoers.d/$APP_TYPE
      - ./{{cookiecutter.deploy_project_dir}}/sys/init.sh:/code/sys/init.sh
      - ./{{cookiecutter.deploy_project_dir}}/sys/init.sh:/code/init/init.sh
      - ./{{cookiecutter.deploy_project_dir}}/sys/etc/supervisor.d:/code/sys/etc/supervisor.d
      - ./{{cookiecutter.deploy_project_dir}}:/code/{{cookiecutter.deploy_project_dir}}
      {%-else %}
      - ./sys/sudoer:/etc/sudoers.d/$APP_TYPE
      - ./sys/init.sh:/code/init/init.sh
      # retrocompat
      - ./sys/init.sh:/code/sys/init.sh
      - ./sys/etc/supervisor.d:/code/etc/supervisor.d
      {%- endif%}
      - ./local:/code/local
      - ./src:/code/src
      - ./lib:/code/lib
      - ./tests:/code/tests
      - ./data:/code/data
      - ./pytest.ini:/code/pytest.ini
      - ./README.rst:/code/README.rst
      - ./LICENSE:/code/LICENSE
      - ./Makefile:/code/Makefile
      - ./MANIFEST.in:/code/MANIFEST.in
      - ./AUTHORS.rst:/code/AUTHORS.rst
      - ./HISTORY.rst:/code/HISTORY.rst
      - ./setup.py:/code/setup.py
      - ./setup.cfg:/code/setup.cfg
      {% if cookiecutter.with_pipenv %}
      - ./Pipfile:/code/Pipfile
      - ./Pipfile.lock:/code/Pipfile.lock.mounted
      {% endif %}
      {% if cookiecutter.with_requirements %}
      - ./requirements.txt:/code/requirements.txt
      - ./requirements-dev.txt:/code/requirements-dev.txt
      {% endif %}
services:
  {% if cookiecutter.with_nginx %}{{nginxc}}nginx:
{% if nginxc -%}
    <<: [ *bypass ]
    # uncomment to activate in dev
{%-endif%}
  {{nginxc}}  ports:
  {{nginxc}}  - 80:80
  {{nginxc}}  {% if not nginxc%}{{nginxsslc}}{%endif %}- 443:443
  {{nginxc}}  environment: {NO_SSL: "0"}
  {% if cookiecutter.db_mode  %}backup: {<<: [ *bypass ]}
  {%endif%}{% endif%}{{cookiecutter.app_type}}:
    <<: [ *flask ]
    environment:
      <<: [ *flask_env ]
      IMAGE_MODE: fg
    ports:
      - "5678:5678"
      - "5000:5000"
{%- if not cookiecutter.remove_cron %}
  cron:
    <<: [ *{{cookiecutter.app_type}} ]
    environment:
      <<: [ *{{cookiecutter.app_type}}_env ]
{% endif %}
